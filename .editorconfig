# Suppress: EC102 EC103 EC104
root = true

# a. without this .editorconfig
# b. with this .editorconfig
#
# Build fails in step 3, but not in step 5.
#     dotnet_diagnostic.CS0219.severity = warning
# takes precedence over /warnaserror+ passed to csc.exe from -p:TreatWarningsAsErrors=true

### Core settings ###

# Don't use tabs for indentation.
[*]
indent_style = space
# (Please don't specify an indent_size here; that has too many unintended consequences.)

# Code files
[*.cs]
indent_size = 4
insert_final_newline = true
charset = utf-8-bom

# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

# JSON files
[*.json]
indent_size = 2

# Powershell files
[*.ps1]
indent_size = 2

# Shell script files
[*.sh]
end_of_line = lf
indent_size = 2

[*.cs]

### Formatting rules ###

# Sort System.* using directives alphabetically, and place them before other using directives.
dotnet_sort_system_directives_first = true
# Do not place a blank line between using directive groups.
dotnet_separate_import_directive_groups = false

## Newline options (https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/formatting-rules#new-line-options)
# braces on a *new line* for the all code elements ("Allman" style).
csharp_new_line_before_open_brace                                             = all
# braces on the *same line* for the all code elements ("Allman" style).
# "K&R" style
;csharp_new_line_before_open_brace                                             = none
# else, catch, finally statements on a new line.
csharp_new_line_before_else                                                   = true
csharp_new_line_before_catch                                                  = true
csharp_new_line_before_finally                                                = true
# members of object initializers should be on separate lines (if not hole expression is on single line)
csharp_new_line_before_members_in_object_initializers                         = true
csharp_new_line_before_members_in_anonymous_types                             = true
# elements of query expression clauses should be on separate lines
csharp_new_line_between_query_expression_clauses                              = true

## Indentation options (https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/formatting-rules#indentation-options)
# switch statements
csharp_indent_case_contents                                                   = true
csharp_indent_switch_labels                                                   = true
csharp_indent_case_contents_when_block                                        = true
# other
csharp_indent_labels                                                          = flush_left
csharp_indent_block_contents                                                  = true
csharp_indent_braces                                                          = false

## Spacing options (https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/formatting-rules#spacing-options)
csharp_space_after_cast                                                       = false
csharp_space_after_keywords_in_control_flow_statements                        = true
csharp_space_between_parentheses                                              = false
csharp_space_before_colon_in_inheritance_clause                               = true
csharp_space_after_colon_in_inheritance_clause                                = true
csharp_space_around_binary_operators                                          = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses            = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses      = false
csharp_space_between_method_declaration_name_and_open_parenthesis             = false
csharp_space_between_method_call_parameter_list_parentheses                   = false
csharp_space_between_method_call_empty_parameter_list_parentheses             = false
csharp_space_between_method_call_name_and_opening_parenthesis                 = false
csharp_space_after_comma                                                      = true
csharp_space_before_comma                                                     = false
csharp_space_after_dot                                                        = false
csharp_space_before_dot                                                       = false
csharp_space_after_semicolon_in_for_statement                                 = true
csharp_space_before_semicolon_in_for_statement                                = false
csharp_space_around_declaration_statements                                    = do_not_ignore
csharp_space_between_empty_square_brackets                                    = false
csharp_space_between_square_brackets                                          = false

## Wrap options (https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/formatting-rules#wrap-options)
csharp_preserve_single_line_statements                                        = true
csharp_preserve_single_line_blocks                                            = true


### Language rules ####

# Avoid "this." if not necessary
# IDE0003: Remove this qualification
# IDE0003: Name can be simplified
# NOTE: Cannot be enforced on build
dotnet_style_qualification_for_field                                          = false:error
dotnet_style_qualification_for_property                                       = false:error
dotnet_style_qualification_for_method                                         = false:error
dotnet_style_qualification_for_event                                          = false:error

# Use language keywords instead of framework type names for type references and (static) member access
# IDE0049: Name can be simplified
# NOTE: Cannot be enforced on build
dotnet_style_predefined_type_for_locals_parameters_members                    = true:error
dotnet_style_predefined_type_for_member_access                                = true





# Prefer "var" only if apparent at same line (https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0007-ide0008)
# IDE0007: Use implicit type
# IDE0008: Use explicit type
# NOTE: we need severity for it to work
csharp_style_var_for_built_in_types                                           = false:suggestion
csharp_style_var_when_type_is_apparent                                        = true:suggestion
csharp_style_var_elsewhere                                                    = true:suggestion




# Prefer curly braces even for one line of code (https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0011#csharp_prefer_braces)
# Braces may be omitted only if the body of every block associated with an if/else if/.../else compound statement is placed on a single line.
# NOTE: We need severity here for some reason here (to avoid AD0001:
#      Analyzer 'Microsoft.CodeAnalysis.CSharp.Diagnostics.AddBraces.CSharpAddBracesDiagnosticAnalyzer' threw an exception of type
#      'System.ArgumentNullException' with message 'Value cannot be null)
# IDE0011: Add braces
csharp_prefer_braces = when_multiline:warning

##########################################################################################################################
### NOTE: All severity settings are duplicated in global analyzer file (https://github.com/dotnet/roslyn/issues/43051) ###
##########################################################################################################################

dotnet_analyzer_diagnostic.category-Style.severity = suggestion

### Compiler warnings ###

;dotnet_diagnostic.CS0219.severity = warning

### CodeStyle Severity ###

# IDE0003: Remove this qualification (Name can be simplified)
# NOTE: not enforced on build
dotnet_diagnostic.IDE0003.severity = warning

# IDE0004: Remove Unnecessary Cast
# NOTE: not enforced on build
dotnet_diagnostic.IDE0004.severity = warning

# IDE0005: Using directive is unnecessary.
dotnet_diagnostic.IDE0005.severity = warning

# IDE0007: Use implicit type
dotnet_diagnostic.IDE0007.severity = warning

# IDE0008: Use explicit type
dotnet_diagnostic.IDE0008.severity = warning

# IDE0009: Add this qualification (Name can be simplified)
# NOTE: not enforced on build
dotnet_diagnostic.IDE0009.severity = warning

# IDE0010: Add missing cases to switch statement
# NOTE: not enforced on build
dotnet_diagnostic.IDE0010.severity = warning

# IDE0011: Add braces
dotnet_diagnostic.IDE0011.severity = warning

# IDE0049: Use language keywords instead of framework type names for type references
# NOTE: not enforced on build
dotnet_diagnostic.ID0049.severity = warning

# All formatting options have IDE0055 rule id and title Fix formatting.
# IDE0055: Fix formatting
dotnet_diagnostic.IDE0055.severity = warning

; TODO: You can specify the following entries to escalate all code style rules in
;       the package to default to a warning and that should enable all of them for build.
# Default severity for all IDE code style rules with category 'Style'
;dotnet_analyzer_diagnostic.category-Style.severity = warning

# Default severity for all IDE code quality rules with category 'CodeQuality'
;dotnet_analyzer_diagnostic.category-CodeQuality.severity = warning
; TODO: You can then selectively downgrade specific rules to a lower severity (none/silent/suggestion) as per your preference.
; TODO: Every IDExxx rule or CAxxxx rule must be explicitly configured below to have severity none, silent or suggestion.

;dotnet_diagnostic.IDE0059.severity = warning
;dotnet_diagnostic.IDE0060.severity = warning#

;dotnet_diagnostic.AD0001.severity = none

